'use strict'


/**
 *
 *  【說明】檢驗資料之正確性，即:
 *    ・繁化表是一一對應，不能有兩個簡化字被指定給同一個繁體字
 *    ・不是一一對應的字，有以下幾種情況:
 *      ・一簡多繁
 *      ・一簡多異（正異取捨）
 *      ・一繁多簡
 *      ・類推簡化字不用或衝突
 *      其中，一繁多簡必由一簡多繁或一簡多異產生。
 *      這是因為，簡化字的方針是合併而非分化，
 *      不可能有一個字被簡化成兩個完全不相干的字。
 *      常見的情況是規範字采取了與傳統或港台不同的正異取捨方案或用字習慣，
 *
 *          例如:
 *
 *            链 -------- 鏈［鎖鏈］
 *               ＼
 *               　＼［項鍊］
 *               　　＼
 *               　　　＼
 *           *𫔀 -------> 鍊
 *               　　　／
 *               　　／
 *               　／［鍛鍊］
 *               ／
 *            炼 -------- 煉［修煉］
 *            
 *            著 -------- 著［著作］
 *               　　　／
 *               　　／
 *               　／［看著］（台灣習慣）
 *               ／
 *            着 -------- 着［看着］（香港習慣）
 *
 *      或是一個字只有部分義項被簡化了。
 *
 *          例如:
 *
 *            乾 -------- 乾［乾坤］
 *               　　　／
 *               　　／
 *               　／［乾燥］
 *               ／
 *            干 -------- 干［干涉］
 *               ＼
 *               　＼
 *               　　＼
 *               　　　＼
 *            　          幹［幹線］
 *
 *            徵 -------- 徵［宫商角徵羽］
 *               　　　／
 *               　　／
 *               　／［特徵］
 *               ／
 *            征 -------- 征［征途］
 *
 *      類推簡化字如果不被使用（在簡體習慣中不簡化），
 *      就產生了 簡->繁 單向轉換關係，
 *
 *          例如:
 *
 *           *㓥 -------> 劏（不類推簡化）
 *               　　　／
 *               　　／
 *               　／［劏房］
 *               ／
 *            劏 
 *
 *      而如果與一簡多繁或一一對應發生衝突，也會產生單向轉換關係，
 *
 *          例如:
 *
 *           *锺 -------> 鍾［鍾愛］［錢鍾書］
 *               　　　／
 *               　　／
 *               　／
 *               ／
 *            钟 -------- 鐘［鐘錶］［鐘鳴鼎食］
 *
 *           *𫔭 -------> 開［開啟］
 *               　　　／
 *               　　／
 *               　／
 *               ／
 *            开
 * 
 *      以上多種情況同時出現也是可能的，
 *
 *          例如:
 *
 *           *渖 -------> 瀋［瀋陽］ // 類推字
 *               　　　／
 *               　　／
 *               　／ //簡化合併
 *               ／ 
 *            沈 -------- 沈［姓沈］
 *               　　　／
 *               　　／
 *               　／ ［下沈］//正異取捨
 *               ／ 
 *            沉 -------- 沉［下沉］
 *
 *      // TODO: 各種規則
 *
 */


function 檢驗資料 () {
  var 錯誤表 = []
  function 檢測衝突 (表1, 表2) {
    var 衝突鍵表 = []
    for ( let 鍵 of Object.keys(表1) ) {
      if ( 表2.存在(鍵) ) {
	衝突鍵表.push(鍵)
      }
    }
    return 衝突鍵表
  }
  // 確認繁化表為一一映射
  if ( 繁化表 ) {
    let 簡化表 = {}
    map(繁化表, function (簡化字, 繁體字) {
      if ( 簡化表.不存在(繁體字) ) {
	簡化表[繁體字] = []
      }
      簡化表[繁體字].push(簡化字)
    })
    map(簡化表, function (繁體字, 簡化字表) {
      if ( 簡化字表.length > 1 ) {
	錯誤表.push(`繁化表出現多簡對一繁: ${繁體字} -> [${簡化字表}]`)
      }
    })
  }
  // 同一簡化字（規範字）只出現在四表之一
  var 不可衝突表名 = ['繁化表', '一簡多繁表', '單向繁化表', '正異取捨表']
  for ( let i=0; i<不可衝突表名.length; i++ ) {
    for ( let j=i+1; j<不可衝突表名.length; j++ ) {
      if ( window.存在(不可衝突表名[i]) && window.存在(不可衝突表名[j]) ) {
	let 表1 = window[不可衝突表名[i]]
	let 表2 = window[不可衝突表名[j]]
	let 衝突簡化字表 = 檢測衝突(表1, 表2)
	if ( 衝突簡化字表.length > 0 ) {
	  錯誤表.push(
	    `${不可衝突表名[i]} 與 ${不可衝突表名[j]} 衝突: [${衝突簡化字表}]`
	  )
	}
      }      
    }
  }
  // 提示錯誤
  if ( 錯誤表.length > 0 ) {
    while ( true ) {
      alert(`資料錯誤:\n${錯誤表.join('\n')}`)
    }
  }
}


window.addEventListener('DOMContentLoaded', ev => 檢驗資料())
